/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MyRotatePanel.java
 *
 * Created on 18/01/2010, 06:32:54 ุต
 */
package imagemanipulation;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.image.BufferedImage;

/**
 *
 * @author eng
 */
public class MyRotatePanel extends javax.swing.JPanel {

    Image image;
    int angle = 0;
    private BufferedImage bi;
    Graphics2D big;
    int WIDTH = 0, HEIGHT = 0; // Size of our example
    Graphics2D g2d;

    /** Creates new form MyRotatePanel */
    public MyRotatePanel(String img) {
        try {

            initComponents();

            image = getToolkit().getImage(img);

            MediaTracker tracker = new MediaTracker(this);
            tracker.addImage(image, 0);
            tracker.waitForAll();

            setHieght();
            setWidth();
            
            bi = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_ARGB);
            big = bi.createGraphics();
            big.drawImage(image, 10, 10, this);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public int getWidth() {
        return WIDTH;
    }

    public int getHeight() {
        return HEIGHT;
    }

    public void setHieght() {
        HEIGHT = (image.getHeight(null) + 30)*4;
    }

    public void setWidth() {
        WIDTH = (image.getWidth(null) + 30)*4;
    }

    public void paintComponent(Graphics g) {
        try {
            super.paintComponent(g);
            g2d = (Graphics2D) g;
            g2d.rotate(Math.toRadians(angle), 60 + getWidth() / 2, 60 + getHeight() / 2);
            g2d.translate(getWidth() / 2, getHeight() / 2);
            g2d.drawImage(bi, 50, 50, this);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rotateRight = new java.awt.Button();
        rotateLeft = new java.awt.Button();

        setLayout(null);

        rotateRight.setLabel("Rotate Right");
        rotateRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotateRightActionPerformed(evt);
            }
        });
        add(rotateRight);
        rotateRight.setBounds(290, 10, 80, 24);

        rotateLeft.setLabel("Rotate Left");
        rotateLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotateLeftActionPerformed(evt);
            }
        });
        add(rotateLeft);
        rotateLeft.setBounds(200, 10, 80, 24);
    }// </editor-fold>//GEN-END:initComponents

    private void rotateRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateRightActionPerformed
        // TODO add your handling code here:
        try {
            angle += 25;
            repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_rotateRightActionPerformed

    private void rotateLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateLeftActionPerformed
        // TODO add your handling code here:
        try {
            angle -= 25;
            repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_rotateLeftActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button rotateLeft;
    private java.awt.Button rotateRight;
    // End of variables declaration//GEN-END:variables
}
